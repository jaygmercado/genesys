version: 2.1

orbs:
  aws-ecs: circleci/aws-ecs@3.2.0 # use the AWS ECS orb
  aws-cli: circleci/aws-cli@3.1.1 # use the AWS CLI orb


executors:
  docker-publisher:
    environment:
      IMAGE_NAME: jaymercado/genesys
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "test12345" | docker login -u "jaymercado" --password-stdin
            docker push $IMAGE_NAME:latest
    echo-env-vars:
      steps:
        - run:
            name: Echo environment variables
            command: 
              # Print out the values of relevant environment variables for debugging
              echo "PARAM_AWS_CLI_ACCESS_KEY_ID: $PARAM_AWS_CLI_ACCESS_KEY_ID"
              echo "PARAM_AWS_CLI_SECRET_ACCESS_KEY: $PARAM_AWS_CLI_SECRET_ACCESS_KEY"
              echo "PARAM_AWS_CLI_REGION: $PARAM_AWS_CLI_REGION"
              echo "PARAM_AWS_CLI_PROFILE_NAME: $PARAM_AWS_CLI_PROFILE_NAME"
              echo "AWS_SESSION_TOKEN: $AWS_SESSION_TOKEN"
              echo "PARAM_AWS_CLI_CONFIG_DEFAULT_REGION: $PARAM_AWS_CLI_CONFIG_DEFAULT_REGION"
              echo "PARAM_AWS_CLI_CONFIG_PROFILE_REGION: $PARAM_AWS_CLI_CONFIG_PROFILE_REGION"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: circleci-project-setup
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: circleci-project-setup
      -  echo-env-vars::
          requires:
            - publish-latest
          filters:
            branches:
              only: circleci-project-setup
      - aws-ecs/deploy-service-update: # orb built-in job
          family: 'GenesysService'
          cluster: 'GenesysCluster'
          container-image-name-updates: 'container=genesys,tag=latest'